FROM ubuntu:22.04

ARG DEBIAN_FRONTEND=noninteractive

ARG PYTORCH_OCL_VERSION=0.2.0
ARG TORCH_VERSION=2.5
ARG PYTHON_VERSION=cp312
ARG PLATFORM=linux_x86_64

ENV WHL_FILE=pytorch_ocl-${PYTORCH_OCL_VERSION}+torch${TORCH_VERSION}-${PYTHON_VERSION}-none-${PLATFORM}.whl
ENV WHL_URL=https://github.com/artyom-beilis/pytorch_dlprim/releases/download/${PYTORCH_OCL_VERSION}/${WHL_FILE}

WORKDIR /app
COPY . /app

RUN apt-get update && apt-get install -y \
    wget \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    curl \
    gpg \
    rm -rf /var/lib/apt/lists/*

# Add AMD GPU repository and install drivers
RUN apt update && \
    wget https://repo.radeon.com/amdgpu-install/6.2.3/ubuntu/jammy/amdgpu-install_6.2.60203-1_all.deb && \
    apt install ./amdgpu-install_6.2.60203-1_all.deb -y && \
    amdgpu-install --usecase=graphics,opencl --opencl=rocr,legacy --accept-eula --no-32 -y && \
    rm ./amdgpu-install_6.2.60203-1_all.deb

# Install OpenCL dependencies
RUN apt-get update && apt-get install -y \
    ocl-icd-opencl-dev \
    opencl-headers \
    ocl-icd-libopencl1 \
    clinfo \
    && rm -rf /var/lib/apt/lists/*

# Configure OpenCL vendors
RUN mkdir -p /etc/OpenCL/vendors && \
    echo "libamdocl64.so" > /etc/OpenCL/vendors/amdocl64.icd

# Install Python 3.12
RUN add-apt-repository ppa:deadsnakes/ppa -y && \
    apt-get update && \
    apt-get install -y \
    python3.12 \
    python3.12-venv \
    python3.12-dev \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Set up Python virtual environment
RUN python3.12 -m venv /app/venv
ENV PATH="/app/venv/bin:$PATH"
RUN pip install --upgrade pip

# Add render and video groups
RUN groupadd -f render && groupadd -f video

# Set environment variables for OpenCL
ENV OCL_ICD_VENDORS=/etc/OpenCL/vendors

COPY requirements.txt /app/requirements.txt
RUN /app/venv/bin/pip install --no-cache-dir -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cpu

# Install OpenCL backend for PyTorch
RUN wget ${WHL_URL} && \
    /app/venv/bin/pip install ${WHL_FILE} && \
    rm ${WHL_FILE}

CMD ["/app/venv/bin/python", "-m", "fastapi", "run", "main.py", "--proxy-headers", "--host", "0.0.0.0", "--port", "8000"]